package io.spring.rabbitmq.rmqinventoryservice.messageconfig;

import org.springframework.amqp.core.Binding;
import org.springframework.amqp.core.BindingBuilder;
import org.springframework.amqp.core.DirectExchange;
import org.springframework.amqp.core.Queue;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

@Configuration
public class OrderConfirmationMessageConfig {

	public static final String ORDER_CONFIRMATION_QUEUE = "order.confirmation.queue";
	public static final String INVENTORY_SERVICE_EXCHANGE = "inventory.service.exchange";
	public static final String ORDER_PLACED_ROUTING_KEY = "order.placed";

	@Bean
	public Queue orderConfirmationQueue() {
		return new Queue(ORDER_CONFIRMATION_QUEUE, true); // Durable queue
	}

	@Bean
	public DirectExchange inventoryServiceExchange() { // Renamed for consistency
		return new DirectExchange(INVENTORY_SERVICE_EXCHANGE);
	}

	@Bean
	public Binding orderConfirmationBinding(Queue orderConfirmationQueue, DirectExchange inventoryServiceExchange) { // Renamed
																														// for
																														// consistency
		return BindingBuilder.bind(orderConfirmationQueue).to(inventoryServiceExchange).with(ORDER_PLACED_ROUTING_KEY);
	}

}
