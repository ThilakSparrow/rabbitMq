package io.spring.rabbitmq.orderservice.model;

import org.springframework.amqp.core.AmqpTemplate;
import org.springframework.amqp.core.Binding;
import org.springframework.amqp.core.BindingBuilder;
import org.springframework.amqp.core.Queue;
import org.springframework.amqp.core.TopicExchange;
import org.springframework.amqp.rabbit.core.RabbitTemplate;
import org.springframework.amqp.support.converter.Jackson2JsonMessageConverter;
import org.springframework.amqp.support.converter.MessageConverter;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import com.rabbitmq.client.ConnectionFactory;

@Configuration
public class MessageConfig {

	public final static String QUEUE = "order_queue";
	public final static String EXCHANGE = "order_exchange";
	public final static String ROUTING_KEY = "order_routing_key";

    @Bean
    Queue queue() {
		return new Queue(QUEUE);
	}

    @Bean
    TopicExchange topicExchange() {
		return new TopicExchange(EXCHANGE);
	}

    @Bean
    Binding binding(Queue queue, TopicExchange topicExchange) {
		return BindingBuilder.bind(queue).to(topicExchange).with(ROUTING_KEY);
	}

    @Bean
    MessageConverter messageConvertor() {
		return new Jackson2JsonMessageConverter();
	}
    
    @Bean 
    AmqpTemplate amqpTemplate(org.springframework.amqp.rabbit.connection.ConnectionFactory connectionFactory) {
    	RabbitTemplate template = new RabbitTemplate(connectionFactory);
    	template.setMessageConverter(messageConvertor()); 
    }
	
	
}
