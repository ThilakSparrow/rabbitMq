package io.spring.rabbitmq.rmqinventoryservice.messageconfig;

import org.springframework.amqp.core.AmqpTemplate;
import org.springframework.amqp.core.Binding;
import org.springframework.amqp.core.BindingBuilder;
import org.springframework.amqp.core.DirectExchange;
import org.springframework.amqp.core.Queue;
import org.springframework.amqp.rabbit.connection.CachingConnectionFactory;
import org.springframework.amqp.rabbit.connection.ConnectionFactory;
import org.springframework.amqp.rabbit.core.RabbitTemplate;
import org.springframework.amqp.support.converter.Jackson2JsonMessageConverter;
import org.springframework.amqp.support.converter.MessageConverter;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.retry.backoff.ExponentialBackOffPolicy;
import org.springframework.retry.support.RetryTemplate;


@Configuration
public class OrderConfirmationMessageConfig {
	
    public static final String ORDER_CONFIRMATION_QUEUE = "order.confirmation.queue";
    public static final String INVENTORY_RESPONSES_EXCHANGE = "inventory.responses.exchange";
    public static final String ORDER_CONFIRMED_ROUTING_KEY = "order.confirmed";
	
	@Bean
    public Queue inventoryResponsesQueue() {
        return new Queue(ORDER_CONFIRMATION_QUEUE, true); 
    }

    @Bean
    public DirectExchange inventoryResponsesExchange() {
        return new DirectExchange(INVENTORY_RESPONSES_EXCHANGE);
    }

    @Bean
    public Binding inventoryResponsesBinding(Queue inventoryResponsesQueue, DirectExchange inventoryResponsesExchange) {
        return BindingBuilder.bind(inventoryResponsesQueue).to(inventoryResponsesExchange).with("inventory.responses");
    }
}
